deploy-to-ecr:
  needs: build-and-test
  runs-on: ubuntu-latest
  if: github.ref == 'refs/heads/main' && github.event_name == 'push'

  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init -input=false

    - name: Terraform Plan
      working-directory: ./terraform
      run: terraform plan -input=false -out=tfplan

    - name: Import existing ECR repo if present
      working-directory: ./terraform
      run: |
        if aws ecr describe-repositories --repository-names python-calculator --region eu-central-1 >/dev/null 2>&1; then
          terraform import aws_ecr_repository.python_calculator python-calculator || true
        fi

    - name: Terraform Apply
      working-directory: ./terraform
      run: terraform apply -input=false -auto-approve tfplan

    - name: Get ECR repository URL
      id: ecr-url
      working-directory: ./terraform
      shell: bash
      run: |
        ECR_URL=$(terraform output -raw ecr_repository_url)
        echo "ecr_url=$ECR_URL" >> "$GITHUB_OUTPUT"

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push Docker image to ECR
      env:
        ECR_URL: ${{ steps.ecr-url.outputs.ecr_url }}
      run: |
        docker build -t "$ECR_URL:latest" .
        docker build -t "$ECR_URL:${{ github.sha }}" .
        echo "Pushing images to ECR..."
        docker push "$ECR_URL:latest"
        docker push "$ECR_URL:${{ github.sha }}"
        echo "Images pushed successfully!"
        echo "Repository URL: $ECR_URL"
